/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.uap.cpb.org.vos;
	
import nc.vo.pub.*;
import nc.vo.pub.lang.*;
import java.util.HashMap;
import java.util.Map;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 * 创建日期:
 * @author 
 * @version NCPrj ??
 */
@SuppressWarnings("serial")
public class CpSysinittempVO extends SuperVO {
	private java.lang.String pk_sysinittemp;
	private java.lang.String initcode;
	private java.lang.String initname;
	private java.lang.String remark;
	private java.lang.String defaultvalue;
	private java.lang.String valuelist;
	private java.lang.Integer stateflag;
	private java.lang.String domainflag;
	private java.lang.Integer sysindex;
	private java.lang.Integer valuetype;
	private java.lang.String sysflag;
	private java.lang.String groupcode;
	private nc.vo.pub.lang.UFLiteralDate mutexflag;
	private nc.vo.pub.lang.UFBoolean mainflag;
	private java.lang.String groupname;
	private nc.vo.pub.lang.UFBoolean showflag;
	private java.lang.String checkclass;
	private java.lang.String dataclass;
	private java.lang.String afterclass;
	private java.lang.String pk_refinfo;
	private java.lang.String editcomponentctrlclass;
	private java.lang.String pk_orgtype;
	private java.lang.Integer orgtypeconvertmode;
	private java.lang.Integer dataoriginflag;
	private java.lang.String paratype;
	private java.lang.Integer dr = 0;
	private nc.vo.pub.lang.UFDateTime ts;

	public static final String PK_SYSINITTEMP = "pk_sysinittemp";
	public static final String INITCODE = "initcode";
	public static final String INITNAME = "initname";
	public static final String REMARK = "remark";
	public static final String DEFAULTVALUE = "defaultvalue";
	public static final String VALUELIST = "valuelist";
	public static final String STATEFLAG = "stateflag";
	public static final String DOMAINFLAG = "domainflag";
	public static final String SYSINDEX = "sysindex";
	public static final String VALUETYPE = "valuetype";
	public static final String SYSFLAG = "sysflag";
	public static final String GROUPCODE = "groupcode";
	public static final String MUTEXFLAG = "mutexflag";
	public static final String MAINFLAG = "mainflag";
	public static final String GROUPNAME = "groupname";
	public static final String SHOWFLAG = "showflag";
	public static final String CHECKCLASS = "checkclass";
	public static final String DATACLASS = "dataclass";
	public static final String AFTERCLASS = "afterclass";
	public static final String PK_REFINFO = "pk_refinfo";
	public static final String EDITCOMPONENTCTRLCLASS = "editcomponentctrlclass";
	public static final String PK_ORGTYPE = "pk_orgtype";
	public static final String ORGTYPECONVERTMODE = "orgtypeconvertmode";
	public static final String DATAORIGINFLAG = "dataoriginflag";
	public static final String PARATYPE = "paratype";
			
	/**
	 * 属性pk_sysinittemp的Getter方法.属性名：主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_sysinittemp () {
		return pk_sysinittemp;
	}   
	/**
	 * 属性pk_sysinittemp的Setter方法.属性名：主键
	 * 创建日期:
	 * @param newPk_sysinittemp java.lang.String
	 */
	public void setPk_sysinittemp (java.lang.String newPk_sysinittemp ) {
	 	this.pk_sysinittemp = newPk_sysinittemp;
	} 	  
	/**
	 * 属性initcode的Getter方法.属性名：参数代码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getInitcode () {
		return initcode;
	}   
	/**
	 * 属性initcode的Setter方法.属性名：参数代码
	 * 创建日期:
	 * @param newInitcode java.lang.String
	 */
	public void setInitcode (java.lang.String newInitcode ) {
	 	this.initcode = newInitcode;
	} 	  
	/**
	 * 属性initname的Getter方法.属性名：参数名称
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getInitname () {
		return initname;
	}   
	/**
	 * 属性initname的Setter方法.属性名：参数名称
	 * 创建日期:
	 * @param newInitname java.lang.String
	 */
	public void setInitname (java.lang.String newInitname ) {
	 	this.initname = newInitname;
	} 	  
	/**
	 * 属性remark的Getter方法.属性名：参数说明
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getRemark () {
		return remark;
	}   
	/**
	 * 属性remark的Setter方法.属性名：参数说明
	 * 创建日期:
	 * @param newRemark java.lang.String
	 */
	public void setRemark (java.lang.String newRemark ) {
	 	this.remark = newRemark;
	} 	  
	/**
	 * 属性defaultvalue的Getter方法.属性名：默认值
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getDefaultvalue () {
		return defaultvalue;
	}   
	/**
	 * 属性defaultvalue的Setter方法.属性名：默认值
	 * 创建日期:
	 * @param newDefaultvalue java.lang.String
	 */
	public void setDefaultvalue (java.lang.String newDefaultvalue ) {
	 	this.defaultvalue = newDefaultvalue;
	} 	  
	/**
	 * 属性valuelist的Getter方法.属性名：取值范围
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getValuelist () {
		return valuelist;
	}   
	/**
	 * 属性valuelist的Setter方法.属性名：取值范围
	 * 创建日期:
	 * @param newValuelist java.lang.String
	 */
	public void setValuelist (java.lang.String newValuelist ) {
	 	this.valuelist = newValuelist;
	} 	  
	/**
	 * 属性stateflag的Getter方法.属性名：编辑样式
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getStateflag () {
		return stateflag;
	}   
	/**
	 * 属性stateflag的Setter方法.属性名：编辑样式
	 * 创建日期:
	 * @param newStateflag java.lang.Integer
	 */
	public void setStateflag (java.lang.Integer newStateflag ) {
	 	this.stateflag = newStateflag;
	} 	  
	/**
	 * 属性domainflag的Getter方法.属性名：模块名
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getDomainflag () {
		return domainflag;
	}   
	/**
	 * 属性domainflag的Setter方法.属性名：模块名
	 * 创建日期:
	 * @param newDomainflag java.lang.String
	 */
	public void setDomainflag (java.lang.String newDomainflag ) {
	 	this.domainflag = newDomainflag;
	} 	  
	/**
	 * 属性sysindex的Getter方法.属性名：序号
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getSysindex () {
		return sysindex;
	}   
	/**
	 * 属性sysindex的Setter方法.属性名：序号
	 * 创建日期:
	 * @param newSysindex java.lang.Integer
	 */
	public void setSysindex (java.lang.Integer newSysindex ) {
	 	this.sysindex = newSysindex;
	} 	  
	/**
	 * 属性valuetype的Getter方法.属性名：值类型
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getValuetype () {
		return valuetype;
	}   
	/**
	 * 属性valuetype的Setter方法.属性名：值类型
	 * 创建日期:
	 * @param newValuetype java.lang.Integer
	 */
	public void setValuetype (java.lang.Integer newValuetype ) {
	 	this.valuetype = newValuetype;
	} 	  
	/**
	 * 属性sysflag的Getter方法.属性名：默认值是否为java类
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getSysflag () {
		return sysflag;
	}   
	/**
	 * 属性sysflag的Setter方法.属性名：默认值是否为java类
	 * 创建日期:
	 * @param newSysflag java.lang.String
	 */
	public void setSysflag (java.lang.String newSysflag ) {
	 	this.sysflag = newSysflag;
	} 	  
	/**
	 * 属性groupcode的Getter方法.属性名：组编码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getGroupcode () {
		return groupcode;
	}   
	/**
	 * 属性groupcode的Setter方法.属性名：组编码
	 * 创建日期:
	 * @param newGroupcode java.lang.String
	 */
	public void setGroupcode (java.lang.String newGroupcode ) {
	 	this.groupcode = newGroupcode;
	} 	  
	/**
	 * 属性mutexflag的Getter方法.属性名：互斥值
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFLiteralDate
	 */
	public nc.vo.pub.lang.UFLiteralDate getMutexflag () {
		return mutexflag;
	}   
	/**
	 * 属性mutexflag的Setter方法.属性名：互斥值
	 * 创建日期:
	 * @param newMutexflag nc.vo.pub.lang.UFLiteralDate
	 */
	public void setMutexflag (nc.vo.pub.lang.UFLiteralDate newMutexflag ) {
	 	this.mutexflag = newMutexflag;
	} 	  
	/**
	 * 属性mainflag的Getter方法.属性名：是否主组参数
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getMainflag () {
		return mainflag;
	}   
	/**
	 * 属性mainflag的Setter方法.属性名：是否主组参数
	 * 创建日期:
	 * @param newMainflag nc.vo.pub.lang.UFBoolean
	 */
	public void setMainflag (nc.vo.pub.lang.UFBoolean newMainflag ) {
	 	this.mainflag = newMainflag;
	} 	  
	/**
	 * 属性groupname的Getter方法.属性名：组名称
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getGroupname () {
		return groupname;
	}   
	/**
	 * 属性groupname的Setter方法.属性名：组名称
	 * 创建日期:
	 * @param newGroupname java.lang.String
	 */
	public void setGroupname (java.lang.String newGroupname ) {
	 	this.groupname = newGroupname;
	} 	  
	/**
	 * 属性showflag的Getter方法.属性名：是否显示
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getShowflag () {
		return showflag;
	}   
	/**
	 * 属性showflag的Setter方法.属性名：是否显示
	 * 创建日期:
	 * @param newShowflag nc.vo.pub.lang.UFBoolean
	 */
	public void setShowflag (nc.vo.pub.lang.UFBoolean newShowflag ) {
	 	this.showflag = newShowflag;
	} 	  
	/**
	 * 属性checkclass的Getter方法.属性名：检查类
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getCheckclass () {
		return checkclass;
	}   
	/**
	 * 属性checkclass的Setter方法.属性名：检查类
	 * 创建日期:
	 * @param newCheckclass java.lang.String
	 */
	public void setCheckclass (java.lang.String newCheckclass ) {
	 	this.checkclass = newCheckclass;
	} 	  
	/**
	 * 属性dataclass的Getter方法.属性名：deprecated
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getDataclass () {
		return dataclass;
	}   
	/**
	 * 属性dataclass的Setter方法.属性名：deprecated
	 * 创建日期:
	 * @param newDataclass java.lang.String
	 */
	public void setDataclass (java.lang.String newDataclass ) {
	 	this.dataclass = newDataclass;
	} 	  
	/**
	 * 属性afterclass的Getter方法.属性名：已被遗弃
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getAfterclass () {
		return afterclass;
	}   
	/**
	 * 属性afterclass的Setter方法.属性名：已被遗弃
	 * 创建日期:
	 * @param newAfterclass java.lang.String
	 */
	public void setAfterclass (java.lang.String newAfterclass ) {
	 	this.afterclass = newAfterclass;
	} 	  
	/**
	 * 属性pk_refinfo的Getter方法.属性名：参照控件
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_refinfo () {
		return pk_refinfo;
	}   
	/**
	 * 属性pk_refinfo的Setter方法.属性名：参照控件
	 * 创建日期:
	 * @param newPk_refinfo java.lang.String
	 */
	public void setPk_refinfo (java.lang.String newPk_refinfo ) {
	 	this.pk_refinfo = newPk_refinfo;
	} 	  
	/**
	 * 属性editcomponentctrlclass的Getter方法.属性名：参照属性修改控制类
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getEditcomponentctrlclass () {
		return editcomponentctrlclass;
	}   
	/**
	 * 属性editcomponentctrlclass的Setter方法.属性名：参照属性修改控制类
	 * 创建日期:
	 * @param newEditcomponentctrlclass java.lang.String
	 */
	public void setEditcomponentctrlclass (java.lang.String newEditcomponentctrlclass ) {
	 	this.editcomponentctrlclass = newEditcomponentctrlclass;
	} 	  
	/**
	 * 属性pk_orgtype的Getter方法.属性名：组织类型
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_orgtype () {
		return pk_orgtype;
	}   
	/**
	 * 属性pk_orgtype的Setter方法.属性名：组织类型
	 * 创建日期:
	 * @param newPk_orgtype java.lang.String
	 */
	public void setPk_orgtype (java.lang.String newPk_orgtype ) {
	 	this.pk_orgtype = newPk_orgtype;
	} 	  
	/**
	 * 属性orgtypeconvertmode的Getter方法.属性名：组织类型转换模式
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getOrgtypeconvertmode () {
		return orgtypeconvertmode;
	}   
	/**
	 * 属性orgtypeconvertmode的Setter方法.属性名：组织类型转换模式
	 * 创建日期:
	 * @param newOrgtypeconvertmode java.lang.Integer
	 */
	public void setOrgtypeconvertmode (java.lang.Integer newOrgtypeconvertmode ) {
	 	this.orgtypeconvertmode = newOrgtypeconvertmode;
	} 	  
	/**
	 * 属性dataoriginflag的Getter方法.属性名：attrDisplayName
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDataoriginflag () {
		return dataoriginflag;
	}   
	/**
	 * 属性dataoriginflag的Setter方法.属性名：attrDisplayName
	 * 创建日期:
	 * @param newDataoriginflag java.lang.Integer
	 */
	public void setDataoriginflag (java.lang.Integer newDataoriginflag ) {
	 	this.dataoriginflag = newDataoriginflag;
	} 	  
	/**
	 * 属性paratype的Getter方法.属性名：参数类型
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getParatype () {
		return paratype;
	}   
	/**
	 * 属性paratype的Setter方法.属性名：参数类型
	 * 创建日期:
	 * @param newParatype java.lang.String
	 */
	public void setParatype (java.lang.String newParatype ) {
	 	this.paratype = newParatype;
	} 	  
	/**
	 * 属性dr的Getter方法.属性名：dr
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDr () {
		return dr;
	}   
	/**
	 * 属性dr的Setter方法.属性名：dr
	 * 创建日期:
	 * @param newDr java.lang.Integer
	 */
	public void setDr (java.lang.Integer newDr ) {
	 	this.dr = newDr;
	} 	  
	/**
	 * 属性ts的Getter方法.属性名：ts
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getTs () {
		return ts;
	}   
	/**
	 * 属性ts的Setter方法.属性名：ts
	 * 创建日期:
	 * @param newTs nc.vo.pub.lang.UFDateTime
	 */
	public void setTs (nc.vo.pub.lang.UFDateTime newTs ) {
	 	this.ts = newTs;
	} 	  
 
	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	    return null;
	}   
    
	/**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	  return "pk_sysinittemp";
	}
    
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {
		return "cp_sysinittemp";
	}    
	
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public static java.lang.String getDefaultTableName() {
		return "cp_sysinittemp";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:
	  */
     public CpSysinittempVO() {
		super();	
	}    
} 


