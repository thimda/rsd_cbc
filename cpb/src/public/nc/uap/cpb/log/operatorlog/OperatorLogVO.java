/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.uap.cpb.log.operatorlog;
	

import nc.vo.pub.*;
import nc.vo.pub.lang.*;
import java.util.HashMap;
import java.util.Map;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 * 创建日期:
 * @author 
 * @version NCPrj ??
 */
@SuppressWarnings("serial")
public class OperatorLogVO extends SuperVO {
	private java.lang.String pk_funcoperlog;
	private java.lang.String buttonname;
	private java.lang.String clientip;
	private java.lang.String pk_logingrop;
	private java.lang.String funcnodename;
	private java.lang.String username;
	private java.lang.String truename;
	private nc.vo.pub.lang.UFDateTime opertime;
	private java.lang.String logingropcode;
	private java.lang.String funcnodecode;
	private java.lang.String pk_user;
	private java.lang.String pk_funcnode;
	private java.lang.String detail;
	private java.lang.String sessionid;
	private java.lang.Integer dr = 0;
	private nc.vo.pub.lang.UFDateTime ts;

	public static final String PK_FUNCOPERLOG = "pk_funcoperlog";
	public static final String BUTTONNAME = "buttonname";
	public static final String CLIENTIP = "clientip";
	public static final String PK_LOGINGROP = "pk_logingrop";
	public static final String FUNCNODENAME = "funcnodename";
	public static final String USERNAME = "username";
	public static final String TRUENAME = "truename";
	public static final String OPERTIME = "opertime";
	public static final String LOGINGROPCODE = "logingropcode";
	public static final String FUNCNODECODE = "funcnodecode";
	public static final String PK_USER = "pk_user";
	public static final String PK_FUNCNODE = "pk_funcnode";
	public static final String DETAIL = "detail";
	public static final String SESSIONID = "sessionid";
			
	/**
	 * 属性pk_funcoperlog的Getter方法.属性名：主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_funcoperlog () {
		return pk_funcoperlog;
	}   
	/**
	 * 属性pk_funcoperlog的Setter方法.属性名：主键
	 * 创建日期:
	 * @param newPk_funcoperlog java.lang.String
	 */
	public void setPk_funcoperlog (java.lang.String newPk_funcoperlog ) {
	 	this.pk_funcoperlog = newPk_funcoperlog;
	} 	  
	/**
	 * 属性buttonname的Getter方法.属性名：按钮名称
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getButtonname () {
		return buttonname;
	}   
	/**
	 * 属性buttonname的Setter方法.属性名：按钮名称
	 * 创建日期:
	 * @param newButtonname java.lang.String
	 */
	public void setButtonname (java.lang.String newButtonname ) {
	 	this.buttonname = newButtonname;
	} 	  
	/**
	 * 属性clientip的Getter方法.属性名：客户端IP
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getClientip () {
		return clientip;
	}   
	/**
	 * 属性clientip的Setter方法.属性名：客户端IP
	 * 创建日期:
	 * @param newClientip java.lang.String
	 */
	public void setClientip (java.lang.String newClientip ) {
	 	this.clientip = newClientip;
	} 	  
	/**
	 * 属性pk_logingrop的Getter方法.属性名：登录集团主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_logingrop () {
		return pk_logingrop;
	}   
	/**
	 * 属性pk_logingrop的Setter方法.属性名：登录集团主键
	 * 创建日期:
	 * @param newPk_logingrop java.lang.String
	 */
	public void setPk_logingrop (java.lang.String newPk_logingrop ) {
	 	this.pk_logingrop = newPk_logingrop;
	} 	  
	/**
	 * 属性funcnodename的Getter方法.属性名：功能节点全名
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getFuncnodename () {
		return funcnodename;
	}   
	/**
	 * 属性funcnodename的Setter方法.属性名：功能节点全名
	 * 创建日期:
	 * @param newFuncnodename java.lang.String
	 */
	public void setFuncnodename (java.lang.String newFuncnodename ) {
	 	this.funcnodename = newFuncnodename;
	} 	  
	/**
	 * 属性username的Getter方法.属性名：用户名称
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getUsername () {
		return username;
	}   
	/**
	 * 属性username的Setter方法.属性名：用户名称
	 * 创建日期:
	 * @param newUsername java.lang.String
	 */
	public void setUsername (java.lang.String newUsername ) {
	 	this.username = newUsername;
	} 	  
	/**
	 * 属性truename的Getter方法.属性名：真实姓名
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTruename () {
		return truename;
	}   
	/**
	 * 属性truename的Setter方法.属性名：真实姓名
	 * 创建日期:
	 * @param newTruename java.lang.String
	 */
	public void setTruename (java.lang.String newTruename ) {
	 	this.truename = newTruename;
	} 	  
	/**
	 * 属性opertime的Getter方法.属性名：操作时间
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getOpertime () {
		return opertime;
	}   
	/**
	 * 属性opertime的Setter方法.属性名：操作时间
	 * 创建日期:
	 * @param newOpertime nc.vo.pub.lang.UFDateTime
	 */
	public void setOpertime (nc.vo.pub.lang.UFDateTime newOpertime ) {
	 	this.opertime = newOpertime;
	} 	  
	/**
	 * 属性logingropcode的Getter方法.属性名：登录集团编码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getLogingropcode () {
		return logingropcode;
	}   
	/**
	 * 属性logingropcode的Setter方法.属性名：登录集团编码
	 * 创建日期:
	 * @param newLogingropcode java.lang.String
	 */
	public void setLogingropcode (java.lang.String newLogingropcode ) {
	 	this.logingropcode = newLogingropcode;
	} 	  
	/**
	 * 属性funcnodecode的Getter方法.属性名：功能节点编码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getFuncnodecode () {
		return funcnodecode;
	}   
	/**
	 * 属性funcnodecode的Setter方法.属性名：功能节点编码
	 * 创建日期:
	 * @param newFuncnodecode java.lang.String
	 */
	public void setFuncnodecode (java.lang.String newFuncnodecode ) {
	 	this.funcnodecode = newFuncnodecode;
	} 	  
	/**
	 * 属性pk_user的Getter方法.属性名：用户pk
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_user () {
		return pk_user;
	}   
	/**
	 * 属性pk_user的Setter方法.属性名：用户pk
	 * 创建日期:
	 * @param newPk_user java.lang.String
	 */
	public void setPk_user (java.lang.String newPk_user ) {
	 	this.pk_user = newPk_user;
	} 	  
	/**
	 * 属性pk_funcnode的Getter方法.属性名：功能节点主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_funcnode () {
		return pk_funcnode;
	}   
	/**
	 * 属性pk_funcnode的Setter方法.属性名：功能节点主键
	 * 创建日期:
	 * @param newPk_funcnode java.lang.String
	 */
	public void setPk_funcnode (java.lang.String newPk_funcnode ) {
	 	this.pk_funcnode = newPk_funcnode;
	} 	  
	/**
	 * 属性detail的Getter方法.属性名：详细信息
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getDetail () {
		return detail;
	}   
	/**
	 * 属性detail的Setter方法.属性名：详细信息
	 * 创建日期:
	 * @param newDetail java.lang.String
	 */
	public void setDetail (java.lang.String newDetail ) {
	 	this.detail = newDetail;
	} 	  
	/**
	 * 属性sessionid的Getter方法.属性名：sessionID
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getSessionid () {
		return sessionid;
	}   
	/**
	 * 属性sessionid的Setter方法.属性名：sessionID
	 * 创建日期:
	 * @param newSessionid java.lang.String
	 */
	public void setSessionid (java.lang.String newSessionid ) {
	 	this.sessionid = newSessionid;
	} 	  
	/**
	 * 属性dr的Getter方法.属性名：dr
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDr () {
		return dr;
	}   
	/**
	 * 属性dr的Setter方法.属性名：dr
	 * 创建日期:
	 * @param newDr java.lang.Integer
	 */
	public void setDr (java.lang.Integer newDr ) {
	 	this.dr = newDr;
	} 	  
	/**
	 * 属性ts的Getter方法.属性名：ts
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getTs () {
		return ts;
	}   
	/**
	 * 属性ts的Setter方法.属性名：ts
	 * 创建日期:
	 * @param newTs nc.vo.pub.lang.UFDateTime
	 */
	public void setTs (nc.vo.pub.lang.UFDateTime newTs ) {
	 	this.ts = newTs;
	} 	  
 
	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	    return null;
	}   
    
	/**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	  return "pk_funcoperlog";
	}
    
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {
		return "cpb_funcoper_log";
	}    
	
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public static java.lang.String getDefaultTableName() {
		return "cpb_funcoper_log";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:
	  */
     public OperatorLogVO() {
		super();	
	}    
} 


