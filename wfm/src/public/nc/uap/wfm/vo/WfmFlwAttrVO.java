/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.uap.wfm.vo;
import nc.vo.pub.SuperVO;
/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 * 在此处添加此类的描述信息
 * </p>
 * 创建日期:
 * 
 * @author
 * @version NCPrj ??
 */
@SuppressWarnings("serial") public class WfmFlwAttrVO extends SuperVO {
	private java.lang.String pk_flwattr;
	private java.lang.String pk_flwtype;
	private java.lang.String serverclass;
	private java.lang.String pk_funcode;
	private java.lang.Integer dr = 0;
	private nc.vo.pub.lang.UFDateTime ts;
	public static final String PK_FLWATTR = "pk_flwattr";
	public static final String PK_FLWTYPE = "pk_flwtype";
	public static final String SERVERCLASS = "serverclass";
	public static final String PK_FUNCODE = "pk_funcode";
	/**
	 * 属性pk_flwattr的Getter方法.属性名：主键 创建日期:
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getPk_flwattr() {
		return pk_flwattr;
	}
	/**
	 * 属性pk_flwattr的Setter方法.属性名：主键 创建日期:
	 * 
	 * @param newPk_flwattr
	 *            java.lang.String
	 */
	public void setPk_flwattr(java.lang.String newPk_flwattr) {
		this.pk_flwattr = newPk_flwattr;
	}
	/**
	 * 属性pk_flwtype的Getter方法.属性名：流程类型 创建日期:
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getPk_flwtype() {
		return pk_flwtype;
	}
	/**
	 * 属性pk_flwtype的Setter方法.属性名：流程类型 创建日期:
	 * 
	 * @param newPk_flwtype
	 *            java.lang.String
	 */
	public void setPk_flwtype(java.lang.String newPk_flwtype) {
		this.pk_flwtype = newPk_flwtype;
	}
	/**
	 * 属性serverclass的Getter方法.属性名：服务注册类 创建日期:
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getServerclass() {
		return serverclass;
	}
	/**
	 * 属性serverclass的Setter方法.属性名：服务注册类 创建日期:
	 * 
	 * @param newServerclass
	 *            java.lang.String
	 */
	public void setServerclass(java.lang.String newServerclass) {
		this.serverclass = newServerclass;
	}
	/**
	 * 属性pk_funcode的Getter方法.属性名：功能节点ID 创建日期:
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getPk_funcode() {
		return pk_funcode;
	}
	/**
	 * 属性pk_funcode的Setter方法.属性名：功能节点ID 创建日期:
	 * 
	 * @param newPk_funcode
	 *            java.lang.String
	 */
	public void setPk_funcode(java.lang.String newPk_funcode) {
		this.pk_funcode = newPk_funcode;
	}
	/**
	 * 属性dr的Getter方法.属性名：dr 创建日期:
	 * 
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDr() {
		return dr;
	}
	/**
	 * 属性dr的Setter方法.属性名：dr 创建日期:
	 * 
	 * @param newDr
	 *            java.lang.Integer
	 */
	public void setDr(java.lang.Integer newDr) {
		this.dr = newDr;
	}
	/**
	 * 属性ts的Getter方法.属性名：ts 创建日期:
	 * 
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getTs() {
		return ts;
	}
	/**
	 * 属性ts的Setter方法.属性名：ts 创建日期:
	 * 
	 * @param newTs
	 *            nc.vo.pub.lang.UFDateTime
	 */
	public void setTs(nc.vo.pub.lang.UFDateTime newTs) {
		this.ts = newTs;
	}
	/**
	 * <p>
	 * 取得父VO主键字段.
	 * <p>
	 * 创建日期:
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getParentPKFieldName() {
		return null;
	}
	/**
	 * <p>
	 * 取得表主键.
	 * <p>
	 * 创建日期:
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getPKFieldName() {
		return "pk_flwattr";
	}
	/**
	 * <p>
	 * 返回表名称.
	 * <p>
	 * 创建日期:
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {
		return "wfm_flwattr";
	}
	/**
	 * <p>
	 * 返回表名称.
	 * <p>
	 * 创建日期:
	 * 
	 * @return java.lang.String
	 */
	public static java.lang.String getDefaultTableName() {
		return "wfm_flwattr";
	}
	/**
	 * 按照默认方式创建构造子.
	 * 
	 * 创建日期:
	 */
	public WfmFlwAttrVO() {
		super();
	}
}
