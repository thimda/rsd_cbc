/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.uap.portal.ctrl.office.data.sign;
	
import nc.vo.pub.*;
import nc.vo.pub.lang.*;
import java.util.HashMap;
import java.util.Map;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 * 创建日期:
 * @author 
 * @version NCPrj ??
 */
@SuppressWarnings("serial")
public class SignlogVO extends SuperVO {
	private java.lang.String pk_signlog;
	private java.lang.String operby;
	private java.lang.String operbycode;
	private nc.vo.pub.lang.UFDateTime opertime;
	private java.lang.String pk_funnode;
	private java.lang.String funnodecode;
	private java.lang.String funnodename;
	private java.lang.String data_pk;
	private java.lang.String signtype;
	private java.lang.String signsn;
	private java.lang.String signname;
	private java.lang.String signoper;
	private java.lang.String pk_lfwfile;
	private java.lang.String clientip;
	private java.lang.String detail;
	private java.lang.String doclocal;
	private java.lang.Integer dr = 0;
	private nc.vo.pub.lang.UFDateTime ts;

	public static final String PK_SIGNLOG = "pk_signlog";
	public static final String OPERBY = "operby";
	public static final String OPERBYCODE = "operbycode";
	public static final String OPERTIME = "opertime";
	public static final String PK_FUNNODE = "pk_funnode";
	public static final String FUNNODECODE = "funnodecode";
	public static final String FUNNODENAME = "funnodename";
	public static final String DATA_PK = "data_pk";
	public static final String SIGNTYPE = "signtype";
	public static final String SIGNSN = "signsn";
	public static final String SIGNNAME = "signname";
	public static final String SIGNOPER = "signoper";
	public static final String PK_LFWFILE = "pk_lfwfile";
	public static final String CLIENTIP = "clientip";
	public static final String DETAIL = "detail";
	public static final String DOCLOCAL = "doclocal";
			
	/**
	 * 属性pk_signlog的Getter方法.属性名：主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_signlog () {
		return pk_signlog;
	}   
	/**
	 * 属性pk_signlog的Setter方法.属性名：主键
	 * 创建日期:
	 * @param newPk_signlog java.lang.String
	 */
	public void setPk_signlog (java.lang.String newPk_signlog ) {
	 	this.pk_signlog = newPk_signlog;
	} 	  
	/**
	 * 属性operby的Getter方法.属性名：操作人
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getOperby () {
		return operby;
	}   
	/**
	 * 属性operby的Setter方法.属性名：操作人
	 * 创建日期:
	 * @param newOperby java.lang.String
	 */
	public void setOperby (java.lang.String newOperby ) {
	 	this.operby = newOperby;
	} 	  
	/**
	 * 属性operbycode的Getter方法.属性名：操作人编码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getOperbycode () {
		return operbycode;
	}   
	/**
	 * 属性operbycode的Setter方法.属性名：操作人编码
	 * 创建日期:
	 * @param newOperbycode java.lang.String
	 */
	public void setOperbycode (java.lang.String newOperbycode ) {
	 	this.operbycode = newOperbycode;
	} 	  
	/**
	 * 属性opertime的Getter方法.属性名：操作时间
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getOpertime () {
		return opertime;
	}   
	/**
	 * 属性opertime的Setter方法.属性名：操作时间
	 * 创建日期:
	 * @param newOpertime nc.vo.pub.lang.UFDateTime
	 */
	public void setOpertime (nc.vo.pub.lang.UFDateTime newOpertime ) {
	 	this.opertime = newOpertime;
	} 	  
	/**
	 * 属性pk_funnode的Getter方法.属性名：功能节点主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_funnode () {
		return pk_funnode;
	}   
	/**
	 * 属性pk_funnode的Setter方法.属性名：功能节点主键
	 * 创建日期:
	 * @param newPk_funnode java.lang.String
	 */
	public void setPk_funnode (java.lang.String newPk_funnode ) {
	 	this.pk_funnode = newPk_funnode;
	} 	  
	/**
	 * 属性funnodecode的Getter方法.属性名：功能节点编码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getFunnodecode () {
		return funnodecode;
	}   
	/**
	 * 属性funnodecode的Setter方法.属性名：功能节点编码
	 * 创建日期:
	 * @param newFunnodecode java.lang.String
	 */
	public void setFunnodecode (java.lang.String newFunnodecode ) {
	 	this.funnodecode = newFunnodecode;
	} 	  
	/**
	 * 属性funnodename的Getter方法.属性名：功能节点名称
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getFunnodename () {
		return funnodename;
	}   
	/**
	 * 属性funnodename的Setter方法.属性名：功能节点名称
	 * 创建日期:
	 * @param newFunnodename java.lang.String
	 */
	public void setFunnodename (java.lang.String newFunnodename ) {
	 	this.funnodename = newFunnodename;
	} 	  
	/**
	 * 属性data_pk的Getter方法.属性名：当前数据主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getData_pk () {
		return data_pk;
	}   
	/**
	 * 属性data_pk的Setter方法.属性名：当前数据主键
	 * 创建日期:
	 * @param newData_pk java.lang.String
	 */
	public void setData_pk (java.lang.String newData_pk ) {
	 	this.data_pk = newData_pk;
	} 	  
	/**
	 * 属性signtype的Getter方法.属性名：签章类型
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getSigntype () {
		return signtype;
	}   
	/**
	 * 属性signtype的Setter方法.属性名：签章类型
	 * 创建日期:
	 * @param newSigntype java.lang.String
	 */
	public void setSigntype (java.lang.String newSigntype ) {
	 	this.signtype = newSigntype;
	} 	  
	/**
	 * 属性signsn的Getter方法.属性名：签章序号
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getSignsn () {
		return signsn;
	}   
	/**
	 * 属性signsn的Setter方法.属性名：签章序号
	 * 创建日期:
	 * @param newSignsn java.lang.String
	 */
	public void setSignsn (java.lang.String newSignsn ) {
	 	this.signsn = newSignsn;
	} 	  
	/**
	 * 属性signname的Getter方法.属性名：印章名称
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getSignname () {
		return signname;
	}   
	/**
	 * 属性signname的Setter方法.属性名：印章名称
	 * 创建日期:
	 * @param newSignname java.lang.String
	 */
	public void setSignname (java.lang.String newSignname ) {
	 	this.signname = newSignname;
	} 	  
	/**
	 * 属性signoper的Getter方法.属性名：操作类型
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getSignoper () {
		return signoper;
	}   
	/**
	 * 属性signoper的Setter方法.属性名：操作类型
	 * 创建日期:
	 * @param newSignoper java.lang.String
	 */
	public void setSignoper (java.lang.String newSignoper ) {
	 	this.signoper = newSignoper;
	} 	  
	/**
	 * 属性pk_lfwfile的Getter方法.属性名：当前文档PK
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_lfwfile () {
		return pk_lfwfile;
	}   
	/**
	 * 属性pk_lfwfile的Setter方法.属性名：当前文档PK
	 * 创建日期:
	 * @param newPk_lfwfile java.lang.String
	 */
	public void setPk_lfwfile (java.lang.String newPk_lfwfile ) {
	 	this.pk_lfwfile = newPk_lfwfile;
	} 	  
	/**
	 * 属性clientip的Getter方法.属性名：客户端IP
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getClientip () {
		return clientip;
	}   
	/**
	 * 属性clientip的Setter方法.属性名：客户端IP
	 * 创建日期:
	 * @param newClientip java.lang.String
	 */
	public void setClientip (java.lang.String newClientip ) {
	 	this.clientip = newClientip;
	} 	  
	/**
	 * 属性detail的Getter方法.属性名：详细信息
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getDetail () {
		return detail;
	}   
	/**
	 * 属性detail的Setter方法.属性名：详细信息
	 * 创建日期:
	 * @param newDetail java.lang.String
	 */
	public void setDetail (java.lang.String newDetail ) {
	 	this.detail = newDetail;
	} 	  
	/**
	 * 属性doclocal的Getter方法.属性名：签章位置
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getDoclocal () {
		return doclocal;
	}   
	/**
	 * 属性doclocal的Setter方法.属性名：签章位置
	 * 创建日期:
	 * @param newDoclocal java.lang.String
	 */
	public void setDoclocal (java.lang.String newDoclocal ) {
	 	this.doclocal = newDoclocal;
	} 	  
	/**
	 * 属性dr的Getter方法.属性名：dr
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDr () {
		return dr;
	}   
	/**
	 * 属性dr的Setter方法.属性名：dr
	 * 创建日期:
	 * @param newDr java.lang.Integer
	 */
	public void setDr (java.lang.Integer newDr ) {
	 	this.dr = newDr;
	} 	  
	/**
	 * 属性ts的Getter方法.属性名：ts
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getTs () {
		return ts;
	}   
	/**
	 * 属性ts的Setter方法.属性名：ts
	 * 创建日期:
	 * @param newTs nc.vo.pub.lang.UFDateTime
	 */
	public void setTs (nc.vo.pub.lang.UFDateTime newTs ) {
	 	this.ts = newTs;
	} 	  
 
	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	    return null;
	}   
    
	/**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	  return "pk_signlog";
	}
    
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {
		return "uapcp_signlog";
	}    
	
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public static java.lang.String getDefaultTableName() {
		return "uapcp_signlog";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:
	  */
     public SignlogVO() {
		super();	
	}    
} 


