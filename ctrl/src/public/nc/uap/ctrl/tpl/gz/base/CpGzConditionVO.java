/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.uap.ctrl.tpl.gz.base;
	
import nc.vo.pub.*;
import nc.vo.pub.lang.*;
import java.util.HashMap;
import java.util.Map;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 * 创建日期:
 * @author 
 * @version NCPrj ??
 */
@SuppressWarnings("serial")
public class CpGzConditionVO extends SuperVO {
	private java.lang.String pk_gz_template;
	private java.lang.String pk_gz_condition;
	private java.lang.String pkcorp;
	private java.lang.String fieldcode;
	private java.lang.String fieldname;
	private java.lang.String operacode;
	private java.lang.String operaname;
	private java.lang.String value;
	private nc.vo.pub.lang.UFBoolean ifdefault;
	private nc.vo.pub.lang.UFBoolean ifused;
	private java.lang.Integer datatype;
	private nc.vo.pub.lang.UFBoolean ifimmobility;
	private java.lang.String consultcode;
	private nc.vo.pub.lang.UFBoolean ifsum;
	private nc.vo.pub.lang.UFBoolean ifgroup;
	private nc.vo.pub.lang.UFBoolean iforder;
	private nc.vo.pub.lang.UFBoolean ifdesc;
	private java.lang.Integer ordersequence;
	private java.lang.Integer maxlength;
	private nc.vo.pub.lang.UFBoolean ifautocheck;
	private nc.vo.pub.lang.UFBoolean ifmust;
	private java.lang.Integer disptype;
	private java.lang.Integer returntype;
	private java.lang.String dispvalue;
	private java.lang.Integer dispsequence;
	private nc.vo.pub.lang.UFBoolean userdefflag;
	private java.lang.String tabcode;
	private java.lang.String tabname;
	private nc.vo.pub.lang.UFBoolean ifdatapower;
	private java.lang.String resid;
	private nc.vo.pub.lang.UFBoolean iscondition;
	private java.lang.String instrumentsql;
	private java.lang.String prerestrict;
	private java.lang.String guideline;
	private nc.vo.pub.lang.UFBoolean ifsubincluded;
	private nc.vo.pub.lang.UFBoolean ifsysfuncrefused;
	private nc.vo.pub.lang.UFBoolean ifattrrefused;
	private nc.vo.pub.lang.UFBoolean ifnotmdcondition;
	private java.lang.Integer limit;
	private java.lang.Integer dr = 0;
	private nc.vo.pub.lang.UFDateTime ts;

	public static final String PK_GZ_TEMPLATE = "pk_gz_template";
	public static final String PK_GZ_CONDITION = "pk_gz_condition";
	public static final String PKCORP = "pkcorp";
	public static final String FIELDCODE = "fieldcode";
	public static final String FIELDNAME = "fieldname";
	public static final String OPERACODE = "operacode";
	public static final String OPERANAME = "operaname";
	public static final String VALUE = "value";
	public static final String IFDEFAULT = "ifdefault";
	public static final String IFUSED = "ifused";
	public static final String DATATYPE = "datatype";
	public static final String IFIMMOBILITY = "ifimmobility";
	public static final String CONSULTCODE = "consultcode";
	public static final String IFSUM = "ifsum";
	public static final String IFGROUP = "ifgroup";
	public static final String IFORDER = "iforder";
	public static final String IFDESC = "ifdesc";
	public static final String ORDERSEQUENCE = "ordersequence";
	public static final String MAXLENGTH = "maxlength";
	public static final String IFAUTOCHECK = "ifautocheck";
	public static final String IFMUST = "ifmust";
	public static final String DISPTYPE = "disptype";
	public static final String RETURNTYPE = "returntype";
	public static final String DISPVALUE = "dispvalue";
	public static final String DISPSEQUENCE = "dispsequence";
	public static final String USERDEFFLAG = "userdefflag";
	public static final String TABCODE = "tabcode";
	public static final String TABNAME = "tabname";
	public static final String IFDATAPOWER = "ifdatapower";
	public static final String RESID = "resid";
	public static final String ISCONDITION = "iscondition";
	public static final String INSTRUMENTSQL = "instrumentsql";
	public static final String PRERESTRICT = "prerestrict";
	public static final String GUIDELINE = "guideline";
	public static final String IFSUBINCLUDED = "ifsubincluded";
	public static final String IFSYSFUNCREFUSED = "ifsysfuncrefused";
	public static final String IFATTRREFUSED = "ifattrrefused";
	public static final String IFNOTMDCONDITION = "ifnotmdcondition";
	public static final String LIMIT = "limit";
			
	/**
	 * 属性pk_gz_template的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_gz_template () {
		return pk_gz_template;
	}   
	/**
	 * 属性pk_gz_template的Setter方法.
	 * 创建日期:
	 * @param newPk_gz_template java.lang.String
	 */
	public void setPk_gz_template (java.lang.String newPk_gz_template ) {
	 	this.pk_gz_template = newPk_gz_template;
	} 	  
	/**
	 * 属性pk_gz_condition的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_gz_condition () {
		return pk_gz_condition;
	}   
	/**
	 * 属性pk_gz_condition的Setter方法.
	 * 创建日期:
	 * @param newPk_gz_condition java.lang.String
	 */
	public void setPk_gz_condition (java.lang.String newPk_gz_condition ) {
	 	this.pk_gz_condition = newPk_gz_condition;
	} 	  
	/**
	 * 属性pkcorp的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPkcorp () {
		return pkcorp;
	}   
	/**
	 * 属性pkcorp的Setter方法.
	 * 创建日期:
	 * @param newPkcorp java.lang.String
	 */
	public void setPkcorp (java.lang.String newPkcorp ) {
	 	this.pkcorp = newPkcorp;
	} 	  
	/**
	 * 属性fieldcode的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getFieldcode () {
		return fieldcode;
	}   
	/**
	 * 属性fieldcode的Setter方法.
	 * 创建日期:
	 * @param newFieldcode java.lang.String
	 */
	public void setFieldcode (java.lang.String newFieldcode ) {
	 	this.fieldcode = newFieldcode;
	} 	  
	/**
	 * 属性fieldname的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getFieldname () {
		return fieldname;
	}   
	/**
	 * 属性fieldname的Setter方法.
	 * 创建日期:
	 * @param newFieldname java.lang.String
	 */
	public void setFieldname (java.lang.String newFieldname ) {
	 	this.fieldname = newFieldname;
	} 	  
	/**
	 * 属性operacode的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getOperacode () {
		return operacode;
	}   
	/**
	 * 属性operacode的Setter方法.
	 * 创建日期:
	 * @param newOperacode java.lang.String
	 */
	public void setOperacode (java.lang.String newOperacode ) {
	 	this.operacode = newOperacode;
	} 	  
	/**
	 * 属性operaname的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getOperaname () {
		return operaname;
	}   
	/**
	 * 属性operaname的Setter方法.
	 * 创建日期:
	 * @param newOperaname java.lang.String
	 */
	public void setOperaname (java.lang.String newOperaname ) {
	 	this.operaname = newOperaname;
	} 	  
	/**
	 * 属性value的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getValue () {
		return value;
	}   
	/**
	 * 属性value的Setter方法.
	 * 创建日期:
	 * @param newValue java.lang.String
	 */
	public void setValue (java.lang.String newValue ) {
	 	this.value = newValue;
	} 	  
	/**
	 * 属性ifdefault的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfdefault () {
		return ifdefault;
	}   
	/**
	 * 属性ifdefault的Setter方法.
	 * 创建日期:
	 * @param newIfdefault nc.vo.pub.lang.UFBoolean
	 */
	public void setIfdefault (nc.vo.pub.lang.UFBoolean newIfdefault ) {
	 	this.ifdefault = newIfdefault;
	} 	  
	/**
	 * 属性ifused的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfused () {
		return ifused;
	}   
	/**
	 * 属性ifused的Setter方法.
	 * 创建日期:
	 * @param newIfused nc.vo.pub.lang.UFBoolean
	 */
	public void setIfused (nc.vo.pub.lang.UFBoolean newIfused ) {
	 	this.ifused = newIfused;
	} 	  
	/**
	 * 属性datatype的Getter方法.
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDatatype () {
		return datatype;
	}   
	/**
	 * 属性datatype的Setter方法.
	 * 创建日期:
	 * @param newDatatype java.lang.Integer
	 */
	public void setDatatype (java.lang.Integer newDatatype ) {
	 	this.datatype = newDatatype;
	} 	  
	/**
	 * 属性ifimmobility的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfimmobility () {
		return ifimmobility;
	}   
	/**
	 * 属性ifimmobility的Setter方法.
	 * 创建日期:
	 * @param newIfimmobility nc.vo.pub.lang.UFBoolean
	 */
	public void setIfimmobility (nc.vo.pub.lang.UFBoolean newIfimmobility ) {
	 	this.ifimmobility = newIfimmobility;
	} 	  
	/**
	 * 属性consultcode的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getConsultcode () {
		return consultcode;
	}   
	/**
	 * 属性consultcode的Setter方法.
	 * 创建日期:
	 * @param newConsultcode java.lang.String
	 */
	public void setConsultcode (java.lang.String newConsultcode ) {
	 	this.consultcode = newConsultcode;
	} 	  
	/**
	 * 属性ifsum的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfsum () {
		return ifsum;
	}   
	/**
	 * 属性ifsum的Setter方法.
	 * 创建日期:
	 * @param newIfsum nc.vo.pub.lang.UFBoolean
	 */
	public void setIfsum (nc.vo.pub.lang.UFBoolean newIfsum ) {
	 	this.ifsum = newIfsum;
	} 	  
	/**
	 * 属性ifgroup的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfgroup () {
		return ifgroup;
	}   
	/**
	 * 属性ifgroup的Setter方法.
	 * 创建日期:
	 * @param newIfgroup nc.vo.pub.lang.UFBoolean
	 */
	public void setIfgroup (nc.vo.pub.lang.UFBoolean newIfgroup ) {
	 	this.ifgroup = newIfgroup;
	} 	  
	/**
	 * 属性iforder的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIforder () {
		return iforder;
	}   
	/**
	 * 属性iforder的Setter方法.
	 * 创建日期:
	 * @param newIforder nc.vo.pub.lang.UFBoolean
	 */
	public void setIforder (nc.vo.pub.lang.UFBoolean newIforder ) {
	 	this.iforder = newIforder;
	} 	  
	/**
	 * 属性ifdesc的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfdesc () {
		return ifdesc;
	}   
	/**
	 * 属性ifdesc的Setter方法.
	 * 创建日期:
	 * @param newIfdesc nc.vo.pub.lang.UFBoolean
	 */
	public void setIfdesc (nc.vo.pub.lang.UFBoolean newIfdesc ) {
	 	this.ifdesc = newIfdesc;
	} 	  
	/**
	 * 属性ordersequence的Getter方法.
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getOrdersequence () {
		return ordersequence;
	}   
	/**
	 * 属性ordersequence的Setter方法.
	 * 创建日期:
	 * @param newOrdersequence java.lang.Integer
	 */
	public void setOrdersequence (java.lang.Integer newOrdersequence ) {
	 	this.ordersequence = newOrdersequence;
	} 	  
	/**
	 * 属性maxlength的Getter方法.
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getMaxlength () {
		return maxlength;
	}   
	/**
	 * 属性maxlength的Setter方法.
	 * 创建日期:
	 * @param newMaxlength java.lang.Integer
	 */
	public void setMaxlength (java.lang.Integer newMaxlength ) {
	 	this.maxlength = newMaxlength;
	} 	  
	/**
	 * 属性ifautocheck的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfautocheck () {
		return ifautocheck;
	}   
	/**
	 * 属性ifautocheck的Setter方法.
	 * 创建日期:
	 * @param newIfautocheck nc.vo.pub.lang.UFBoolean
	 */
	public void setIfautocheck (nc.vo.pub.lang.UFBoolean newIfautocheck ) {
	 	this.ifautocheck = newIfautocheck;
	} 	  
	/**
	 * 属性ifmust的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfmust () {
		return ifmust;
	}   
	/**
	 * 属性ifmust的Setter方法.
	 * 创建日期:
	 * @param newIfmust nc.vo.pub.lang.UFBoolean
	 */
	public void setIfmust (nc.vo.pub.lang.UFBoolean newIfmust ) {
	 	this.ifmust = newIfmust;
	} 	  
	/**
	 * 属性disptype的Getter方法.
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDisptype () {
		return disptype;
	}   
	/**
	 * 属性disptype的Setter方法.
	 * 创建日期:
	 * @param newDisptype java.lang.Integer
	 */
	public void setDisptype (java.lang.Integer newDisptype ) {
	 	this.disptype = newDisptype;
	} 	  
	/**
	 * 属性returntype的Getter方法.
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getReturntype () {
		return returntype;
	}   
	/**
	 * 属性returntype的Setter方法.
	 * 创建日期:
	 * @param newReturntype java.lang.Integer
	 */
	public void setReturntype (java.lang.Integer newReturntype ) {
	 	this.returntype = newReturntype;
	} 	  
	/**
	 * 属性dispvalue的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getDispvalue () {
		return dispvalue;
	}   
	/**
	 * 属性dispvalue的Setter方法.
	 * 创建日期:
	 * @param newDispvalue java.lang.String
	 */
	public void setDispvalue (java.lang.String newDispvalue ) {
	 	this.dispvalue = newDispvalue;
	} 	  
	/**
	 * 属性dispsequence的Getter方法.
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDispsequence () {
		return dispsequence;
	}   
	/**
	 * 属性dispsequence的Setter方法.
	 * 创建日期:
	 * @param newDispsequence java.lang.Integer
	 */
	public void setDispsequence (java.lang.Integer newDispsequence ) {
	 	this.dispsequence = newDispsequence;
	} 	  
	/**
	 * 属性userdefflag的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getUserdefflag () {
		return userdefflag;
	}   
	/**
	 * 属性userdefflag的Setter方法.
	 * 创建日期:
	 * @param newUserdefflag nc.vo.pub.lang.UFBoolean
	 */
	public void setUserdefflag (nc.vo.pub.lang.UFBoolean newUserdefflag ) {
	 	this.userdefflag = newUserdefflag;
	} 	  
	/**
	 * 属性tabcode的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTabcode () {
		return tabcode;
	}   
	/**
	 * 属性tabcode的Setter方法.
	 * 创建日期:
	 * @param newTabcode java.lang.String
	 */
	public void setTabcode (java.lang.String newTabcode ) {
	 	this.tabcode = newTabcode;
	} 	  
	/**
	 * 属性tabname的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTabname () {
		return tabname;
	}   
	/**
	 * 属性tabname的Setter方法.
	 * 创建日期:
	 * @param newTabname java.lang.String
	 */
	public void setTabname (java.lang.String newTabname ) {
	 	this.tabname = newTabname;
	} 	  
	/**
	 * 属性ifdatapower的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfdatapower () {
		return ifdatapower;
	}   
	/**
	 * 属性ifdatapower的Setter方法.
	 * 创建日期:
	 * @param newIfdatapower nc.vo.pub.lang.UFBoolean
	 */
	public void setIfdatapower (nc.vo.pub.lang.UFBoolean newIfdatapower ) {
	 	this.ifdatapower = newIfdatapower;
	} 	  
	/**
	 * 属性resid的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getResid () {
		return resid;
	}   
	/**
	 * 属性resid的Setter方法.
	 * 创建日期:
	 * @param newResid java.lang.String
	 */
	public void setResid (java.lang.String newResid ) {
	 	this.resid = newResid;
	} 	  
	/**
	 * 属性iscondition的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIscondition () {
		return iscondition;
	}   
	/**
	 * 属性iscondition的Setter方法.
	 * 创建日期:
	 * @param newIscondition nc.vo.pub.lang.UFBoolean
	 */
	public void setIscondition (nc.vo.pub.lang.UFBoolean newIscondition ) {
	 	this.iscondition = newIscondition;
	} 	  
	/**
	 * 属性instrumentsql的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getInstrumentsql () {
		return instrumentsql;
	}   
	/**
	 * 属性instrumentsql的Setter方法.
	 * 创建日期:
	 * @param newInstrumentsql java.lang.String
	 */
	public void setInstrumentsql (java.lang.String newInstrumentsql ) {
	 	this.instrumentsql = newInstrumentsql;
	} 	  
	/**
	 * 属性prerestrict的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPrerestrict () {
		return prerestrict;
	}   
	/**
	 * 属性prerestrict的Setter方法.
	 * 创建日期:
	 * @param newPrerestrict java.lang.String
	 */
	public void setPrerestrict (java.lang.String newPrerestrict ) {
	 	this.prerestrict = newPrerestrict;
	} 	  
	/**
	 * 属性guideline的Getter方法.
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getGuideline () {
		return guideline;
	}   
	/**
	 * 属性guideline的Setter方法.
	 * 创建日期:
	 * @param newGuideline java.lang.String
	 */
	public void setGuideline (java.lang.String newGuideline ) {
	 	this.guideline = newGuideline;
	} 	  
	/**
	 * 属性ifsubincluded的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfsubincluded () {
		return ifsubincluded;
	}   
	/**
	 * 属性ifsubincluded的Setter方法.
	 * 创建日期:
	 * @param newIfsubincluded nc.vo.pub.lang.UFBoolean
	 */
	public void setIfsubincluded (nc.vo.pub.lang.UFBoolean newIfsubincluded ) {
	 	this.ifsubincluded = newIfsubincluded;
	} 	  
	/**
	 * 属性ifsysfuncrefused的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfsysfuncrefused () {
		return ifsysfuncrefused;
	}   
	/**
	 * 属性ifsysfuncrefused的Setter方法.
	 * 创建日期:
	 * @param newIfsysfuncrefused nc.vo.pub.lang.UFBoolean
	 */
	public void setIfsysfuncrefused (nc.vo.pub.lang.UFBoolean newIfsysfuncrefused ) {
	 	this.ifsysfuncrefused = newIfsysfuncrefused;
	} 	  
	/**
	 * 属性ifattrrefused的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfattrrefused () {
		return ifattrrefused;
	}   
	/**
	 * 属性ifattrrefused的Setter方法.
	 * 创建日期:
	 * @param newIfattrrefused nc.vo.pub.lang.UFBoolean
	 */
	public void setIfattrrefused (nc.vo.pub.lang.UFBoolean newIfattrrefused ) {
	 	this.ifattrrefused = newIfattrrefused;
	} 	  
	/**
	 * 属性ifnotmdcondition的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFBoolean
	 */
	public nc.vo.pub.lang.UFBoolean getIfnotmdcondition () {
		return ifnotmdcondition;
	}   
	/**
	 * 属性ifnotmdcondition的Setter方法.
	 * 创建日期:
	 * @param newIfnotmdcondition nc.vo.pub.lang.UFBoolean
	 */
	public void setIfnotmdcondition (nc.vo.pub.lang.UFBoolean newIfnotmdcondition ) {
	 	this.ifnotmdcondition = newIfnotmdcondition;
	} 	  
	/**
	 * 属性limit的Getter方法.
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getLimit () {
		return limit;
	}   
	/**
	 * 属性limit的Setter方法.
	 * 创建日期:
	 * @param newLimit java.lang.Integer
	 */
	public void setLimit (java.lang.Integer newLimit ) {
	 	this.limit = newLimit;
	} 	  
	/**
	 * 属性dr的Getter方法.
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDr () {
		return dr;
	}   
	/**
	 * 属性dr的Setter方法.
	 * 创建日期:
	 * @param newDr java.lang.Integer
	 */
	public void setDr (java.lang.Integer newDr ) {
	 	this.dr = newDr;
	} 	  
	/**
	 * 属性ts的Getter方法.
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getTs () {
		return ts;
	}   
	/**
	 * 属性ts的Setter方法.
	 * 创建日期:
	 * @param newTs nc.vo.pub.lang.UFDateTime
	 */
	public void setTs (nc.vo.pub.lang.UFDateTime newTs ) {
	 	this.ts = newTs;
	} 	  
 
	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
		return "pk_gz_template";
	}   
    
	/**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	  return "pk_gz_condition";
	}
    
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {
		return "cp_gz_condition";
	}    
	
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public static java.lang.String getDefaultTableName() {
		return "cp_gz_condition";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:
	  */
     public CpGzConditionVO() {
		super();	
	}    
} 


